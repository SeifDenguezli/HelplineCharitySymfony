{% extends 'base.html.twig' %}

{% block title %}Posts{% endblock %}

{% block body %}
    {{ form_start(form,{attr: {'novalidate': 'novalidate'}}) }}
    {% set isLiked = post.getLikedBy.contains(app.user) %}

    <link rel="stylesheet" href="css/publication.css">
    <body style="background-color: rgba(0,2,7,0.85)"></body>

    <div class="container mt-1 mb-1"  >

        <div class="row d-flex align-items-center justify-content-center">
            <div class="col-md-10">
              <div class="card-body" >
                    <div class="d-flex justify-content-between p-2 px-1">

                        <div class="d-flex flex-row align-items-center"> <img src="https://cdn.pixabay.com/photo/2017/06/13/12/53/profile-2398782_1280.png" width="50" class="rounded-circle">
                            <div class="d-flex flex-column ml-2"> <span class="font-weight-bold">{{ user.name }}</span> <small  style="color: orange;">Membre VIP</small> </div>
                        </div>
                        <div class="d-flex flex-row mt-1 ellipsis" style="margin-right:  0px">
                            <div>  <br><a href="{{ path('posts_edit', {'postid': post.postid}) }}" style="color: orange">Modifier Post</a></div>
                        </div>
                    </div>
                    <div class="p-3">
                        <center><img src={{vich_uploader_asset(post)  }} class="img-fluid" width="1000"></center>
                        <h4 style="font-size:30px ; color: orange">    {{ post.posttitle }}</h4>
                        <small class="mr-0"  style="font-size: 15px;color: orange">{{ post.postdate ? post.postdate|date('Y-m-d') : '' }}</small>
                        <p class="text-justify" style="font-size:20px">{{ post.postcontent }}</p>
                    </div>

                        <hr>
                        <div class="d-flex justify-content-between align-items-center" ><span>4 commentaires</span>
                            <div class="d-flex flex-row icons d-flex align-items-center">  </div>
                            <div class="d-flex flex-row muted-color">

                                <span>
                                    <button style="display: {% if not isLiked %}block {% else %}none{% endif %}" class="btn btn-outline-secondary" id="like">J'aime
                            <span class="badge badge-light" id="likes-like">{{ post.getLikedBy.count }}</span>
                        </button>
                        <button style="display: {% if  isLiked %}block {% else %}none{% endif %}" class="btn btn-outline-danger" id="unlike">J'aime plus
                            <span class="badge badge-light" id="likes-unlike">{{ post.getLikedBy.count }}</span>
                        </button>
                                </span></div>

                        </div>

                        <hr>

                        <div class="comments">
                            {% for comments in comment %}
                                {% set iscLiked = comments.getLikedBy.contains(app.user) %}
                            <br>
                            <table>
                           <tr>
                               <td>
                                   <div class="d-flex flex-row mb-2"> <img src="https://t3.ftcdn.net/jpg/03/46/83/96/360_F_346839683_6nAPzbhpSkIpb8pmAwufkC7c5eD7wYws.jpg" width="40" class="rounded-image">
                                         <div class="d-flex flex-column ml-2">
                                             <span class="name">{{ comments.commentauthor }} </span>
                                             <span class="name"><small style="margin-left: revert">{{ comments.commentdate ? comments.commentdate|date('Y-m-d') : '' }}</small></span>
                                             <small class="comment-text" style="font-size:20px">{{ comments.commentContent }}</small>
                                             <div class="d-flex flex-row align-items-center status"></div>
                                             <span>
                                             <button style="display: {% if not iscLiked %}block {% else %}none{% endif %}; margin-left: 700px;width: 110px" class="btn btn-outline-secondary" id="clike">J'aime
                                                  <span class="badge badge-light" id="clikes-like">{{ comments.getLikedBy.count }}</span>
                                             </button>
                                             <button style="display: {% if  iscLiked %}block {% else %}none{% endif %}; margin-left: 700px;width: 110px" class="btn btn-outline-danger" id="cunlike">J'aime plus
                                                 <span class="badge badge-light" id="clikes-unlike">{{ comments.getLikedBy.count }}</span>
                                             </button>
                                        </span>
                                         </div>
                                   </div>
                               </td>
                           </tr>
                            </table>

                                <hr>
                                {% endfor %}

                            </div>
                            </div>


                  <div class="comment-input">

                      <div > {{ form_errors(form.commentcontent) }}</div>
                       <div class="commentare">{{ form_widget(form.commentcontent) }}</div>



                  </div>

              </div>

                    </div>
                </div>
            </div>
        </div>

    </div>

    {{ form_end(form) }}




<script>
    var likeButton = document.getElementById('like');
    var unlikelikeButton = document.getElementById('unlike');
    addOnClick(
        likeButton,unlikelikeButton,document.getElementById('likes-unlike'),'{{ path('likes_like',{'postid': post.postid}) }}'
    );
    addOnClick(
        unlikelikeButton,likeButton,document.getElementById('likes-like'),'{{ path('likes_unlike',{'postid': post.postid}) }}'
    );
    function switchbuttons(button,oppositeButton){
        button.disabled = true;
        button.style.display = 'none' ;
        oppositeButton.style.display = 'block';
    }
    function addOnClick(button,oppositeButton,likeCount,path){
        button.addEventListener('click',function(event){
            button.disabled = true;
            fetch(path,{'credentials':'include'}).then(function (response) {
                response.json().then(function (json) {
                    likeCount.innerText = json.count;
                    switchbuttons(button,oppositeButton);
                })
            }).catch(function () {
                switchbuttons(button,oppositeButton);
            });
            event.preventDefault();
        });
    }
    var clikeButton = document.getElementById('clike');
    var cunlikelikeButton = document.getElementById('cunlike');
    caddOnClick(
        clikeButton,cunlikelikeButton,document.getElementById('clikes-unlike'),'{{ path('clikes_like',{'postid': post.postid}) }}'
    );
    caddOnClick(
        cunlikelikeButton,clikeButton,document.getElementById('clikes-like'),'{{ path('clikes_unlike',{'postid': post.postid}) }}'
    );
    function cswitchbuttons(button,oppositeButton){
        button.disabled = true;
        button.style.display = 'none' ;
        oppositeButton.style.display = 'block';
    }
    function caddOnClick(button,oppositeButton,likeCount,path){
        button.addEventListener('click',function(event){
            button.disabled = true;
            fetch(path,{'credentials':'include'}).then(function (response) {
                response.json().then(function (json) {
                    likeCount.innerText = json.count;
                    cswitchbuttons(button,oppositeButton);
                })
            }).catch(function () {
                cswitchbuttons(oppositeButton,button);
            });
            event.preventDefault();
        });
    }
</script>
{% endblock body %}
